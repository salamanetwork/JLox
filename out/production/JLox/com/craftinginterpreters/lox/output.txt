[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
[VAR var null, IDENTIFIER x null, EQUAL = null, NUMBER 10.6 10.6, SEMICOLON ; null, FUN fun null, IDENTIFIER sum null, LEFT_PAREN ( null, IDENTIFIER a null, COMMA , null, IDENTIFIER b null, RIGHT_PAREN ) null, LEFT_BRACE { null, RETURN return null, IDENTIFIER a null, PLUS + null, IDENTIFIER b null, SEMICOLON ; null, RIGHT_BRACE } null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, GREATER_EQUAL >= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 5 5.0, COMMA , null, NUMBER 5 5.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, IF if null, LEFT_PAREN ( null, IDENTIFIER x null, LESS_EQUAL <= null, NUMBER 10 10.0, RIGHT_PAREN ) null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 2 2.0, COMMA , null, NUMBER 2 2.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, ELSE else null, LEFT_BRACE { null, IDENTIFIER sum null, LEFT_PAREN ( null, NUMBER 0.0 0.0, COMMA , null, NUMBER 0.0 0.0, RIGHT_PAREN ) null, SEMICOLON ; null, RIGHT_BRACE } null, EOF  null]
